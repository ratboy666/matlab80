#include "matlab.h"
      SUBROUTINE ERROR(N)
      INTEGER N
      FLOAT STKR(N_SIZE),STKI(N_SIZE)
      INTEGER IDSTK(4,48),LSTK(48),MSTK(48),NSTK(48),VSIZE,LSIZE,BOT,TOP
      INTEGER IDS(4,32),PSTK(32),RSTK(32),PSIZE,PT,PTZ
      INTEGER ALFA(52),ALFB(52),ALFL,CASE
      CHARACTER LIN(MAX_LINE)
      INTEGER DDT,ERR,FMT,LCT(4),LPT(6),HIO,RIO,WIO,RTE,WTE
      CHARACTER BUF(BUF_SIZE)
      INTEGER SYM,SYN(4),CHAR,FLP(2),FIN,FUN,LHS,RHS,RAN(2)
      CHARACTER ERRMGC(8),BLC,BEC
      INTEGER ERRMSG(8),BLH,BEL
      COMMON /VSTK/ STKR,STKI,IDSTK,LSTK,MSTK,NSTK,VSIZE,LSIZE,BOT,TOP
      COMMON /RECU/ IDS,PSTK,RSTK,PSIZE,PT,PTZ
      COMMON /ALFS/ ALFA,ALFB,ALFL,CASE
      COMMON /IOP/ DDT,ERR,FMT,LCT,LIN,LPT,HIO,RIO,WIO,RTE,WTE
      COMMON /COM/ SYM,SYN,BUF,CHAR,FLP,FIN,FUN,LHS,RHS,RAN
      DATA ERRMGC /'/','-','-','E','R','R','O','R'/,BLC/' '/,BEC/7/
#ifdef USE_SAVE
      SAVE ERRMGC,BLC,BEC
#endif
C
      ICHAR(I) = I
C
      DO 1011 I = 1, 8
         ERRMSG(I) = ICHAR(ERRMGC(I))
1011  CONTINUE
      BLH = ICHAR(BLC)
      BEL = ICHAR(BEC)
C     SET BEL TO CTRL-G IF POSSIBLE
C 
      K = LPT(2) - LPT(1)
      IF (K .LT. 1) K = 1
      LUNIT = WTE
      CALL GETERR(N,BUF)
   98 WRITE(LUNIT,100) (BLH,I=1,K),(ERRMSG(I),I=1,8),BEL
  100 FORMAT(1X,80A1)
      WRITE(LUNIT,152) (BUF(I),I=1,50)
  152 FORMAT(1X,50A1)

#if 0
    4 DO 94 I = 1, 4
         K = IDS(I,PT+1)
         BUF(I) = ALFA(K+1)
   94 CONTINUE
      WRITE(LUNIT,104) (BUF(I),I=1,4)
  104 FORMAT(1X,'UNDEFINED VARIABLE: ',4A1)
 
   16 WRITE(LUNIT,116)
  116 FORMAT(1X,'IMPROPER COMMAND')
      GO TO 99
   17 LB = VSIZE - LSTK(BOT) + 1
      LT = ERR + LSTK(BOT)
      WRITE(LUNIT,117) LB,LT,VSIZE
  117 FORMAT(1X,'TOO MUCH MEMORY REQUIRED'
     $  /1X,' ',I7,' VARIABLES,',I7,' TEMPORARIES,',I7,' AVAILABLE.')

   22 WRITE(LUNIT,122) (RSTK(I),I=1,PT)
  122 FORMAT(1X,'RECURSION DIFFICULTIES',10I4)
#endif
C 
   99 ERR = N
      IF (LUNIT.EQ.WIO .OR. WIO.EQ.0) RETURN
      LUNIT = WIO
      GO TO 98
      END
C
      SUBROUTINE GETERR(N,CARD)
      BYTE CARD(80)
      BYTE I,J
      M = 38
      LUN = 10
      CALL OPEN(LUN, 'MATLAB  MSG', 0)
    7 DO 6 I = 1,80
        CARD(I) = ' '
    6 CONTINUE
      DO 10 J=1,N
    3   READ(LUN, 1, END = 2) CARD
    1   FORMAT(80A1)
        IF (CARD(1) .NE. 10) GO TO 4
        DO 5 I = 1,79
          CARD(I) = CARD(I+1)
    5   CONTINUE
        CARD(80) = ' '
    4   CONTINUE
   10 CONTINUE
      END FILE LUN
    2 RETURN
      END

